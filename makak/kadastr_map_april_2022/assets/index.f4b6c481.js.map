{"version":3,"file":"index.f4b6c481.js","sources":["../../vite/modulepreload-polyfill","../../main.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import './style.css';\nimport 'ol/ol.css';\nimport Circle from 'ol/geom/Circle';\nimport Feature from 'ol/Feature';\nimport Select from 'ol/interaction/Select';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport {altKeyOnly, click, pointerMove} from 'ol/events/condition';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from 'ol/style';\nimport {OSM, Vector as VectorSource} from 'ol/source';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\nimport * as olProj from 'ol/proj';\nimport * as geojson from './geojson.json';\n\nconst image = new CircleStyle({\n  radius: 5,\n  fill: null,\n  stroke: new Stroke({color: 'red', width: 1}),\n});\n\nconst styles = {\n  'Point': new Style({\n    image: image,\n  }),\n  'LineString': new Style({\n    stroke: new Stroke({\n      color: 'green',\n      width: 1,\n    }),\n  }),\n  'MultiLineString': new Style({\n    stroke: new Stroke({\n      color: 'green',\n      width: 1,\n    }),\n  }),\n  'MultiPoint': new Style({\n    image: image,\n  }),\n  'MultiPolygon': new Style({\n    stroke: new Stroke({\n      color: 'red',\n      width: 1,\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 0, 0, 0.5)',\n    }),\n  }),\n  'Polygon': new Style({\n    stroke: new Stroke({\n      color: 'blue',\n      lineDash: [4],\n      width: 3,\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 255, 0.1)',\n    }),\n  }),\n  'GeometryCollection': new Style({\n    stroke: new Stroke({\n      color: 'magenta',\n      width: 2,\n    }),\n    fill: new Fill({\n      color: 'magenta',\n    }),\n    image: new CircleStyle({\n      radius: 10,\n      fill: null,\n      stroke: new Stroke({\n        color: 'magenta',\n      }),\n    }),\n  }),\n  'Circle': new Style({\n    stroke: new Stroke({\n      color: 'red',\n      width: 2,\n    }),\n    fill: new Fill({\n      color: 'rgba(255,0,0,0.2)',\n    }),\n  }),\n};\n\nconst styleFunction = function (feature) {\n  return styles[feature.getGeometry().getType()];\n};\n\nconsole.log(geojson);\n\nconst geojsonObject = {\n  'type': 'FeatureCollection',\n  'crs': {\n    'type': 'name',\n    'properties': {\n      'name': 'EPSG:4326',\n    },\n  },\n  'features': geojson.geojson\n};\n\nconst features2 = new GeoJSON().readFeatures(geojsonObject);\n\nfeatures2.forEach(function(feature){\n    feature.getGeometry().transform('EPSG:4326', 'EPSG:3857');\n});\n\nconst vectorSource = new VectorSource({\n  features: features2,\n});\n\nconst vectorLayer = new VectorLayer({\n  source: vectorSource,\n  style: styleFunction,\n});\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n    vectorLayer,\n  ],\n  target: 'map',\n  view: new View({\n    center: olProj.transform([31.788841805119695, 59.914941531405575], 'EPSG:4326','EPSG:3857'),\n    zoom: 13,\n  }),\n});\n\nconst selected = new Style({\n  fill: new Fill({\n    color: 'rgba(0, 200, 0, 1)',\n  }),\n  stroke: new Stroke({\n    color: 'rgba(0, 200, 0, 0.5)',\n    width: 2,\n  }),\n});\n\nfunction selectStyle(feature) {\n  return selected;\n}\n\nconst select = new Select({\n  style: selectStyle,\n});\n\nmap.addInteraction(select);\nselect.on('select', function (e) {\n      if (e.target.getFeatures().getLength() > 0) {\n        document.getElementById('status').innerHTML =\n          \"Кадастровый номер: \" + e.target.getFeatures().item(0).get('cn') + \", площадь: \" + e.target.getFeatures().item(0).get('area_value') + \" м2\";\n      } else {\n        document.getElementById('status').innerHTML =\n          \"Щёлкните на участок\";\n      }\n    });\n"],"names":["geojson","geojson.geojson","olProj.transform"],"mappings":"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"}